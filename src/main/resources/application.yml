spring:
  profiles:
    include: secret

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/oauth2jwt?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: root
    password: root

  jpa:
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver # 서비스 이름
            client-id: # 서비스에서 발급 받은 ID - application-secret.yml 분리
            client-secret: # 서비스에서 발급 받은 PW - application-secret.yml 분리
            redirect-uri: http://localhost:8080/login/oauth2/code/naver # 서비스에 등록한 로그인 성공 URI
            authorization-grant-type: authorization_code # 총 4가지 인증 방식 중 코드 방식 선택
            scope: name,email # 리소스 서버에서 가져올 데이터 범위

          google:
            client-name: google
            client-id: # application-secret.yml 분리
            client-secret: # application-secret.yml 분리
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope: profile,email

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 인증 서버 로그인 URI
            token-uri: https://nid.naver.com/oauth2.0/token # 인증 서버 토큰 URI
            user-info-uri: https://openapi.naver.com/v1/nid/me # 인증 서버 사용자 정보 URI
            user-name-attribute: response # 응답 데이터 변수